<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh" lang="zh"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>01  基础架构：一条SQL查询语句是如何执行的？</title><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 .a { color: #E47B39; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s1 { color: #CCC; font-family:"Microsoft Sans Serif", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s2 { color: #878787; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s3 { color: #353535; font-family:Verdana, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 16pt; }
 .s4 { color: #353535; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 16pt; }
 .s5 { color: #878787; font-family:"微软雅黑 Light", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s6 { color: #353535; font-family:Verdana, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11.5pt; }
 .s7 { color: #353535; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11.5pt; }
 .s8 { color: #878787; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 p { color: #353535; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; margin:0pt; }
 .s9 { color: #878787; font-family:"Microsoft Sans Serif", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s10 { color: #878787; font-family:新宋体, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9.5pt; }
 .s11 { color: #1B1F22; font-family:Consolas, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s13 { color: #23292D; font-family:新宋体, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s14 { color: black; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s15 { color: black; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 13.5pt; }
 .s16 { color: #B1B1B1; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9.5pt; }
 .s17 { color: #878787; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10.5pt; }
 .s18 { color: #FFF; font-family:"微软雅黑 Light", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s19 { color: #878787; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11.5pt; }
 .s20 { color: #878787; font-family:"Microsoft Sans Serif", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; vertical-align: 1pt; }
 .s21 { color: #FF5A05; font-family:"微软雅黑 Light", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11.5pt; }
 .s22 { color: #878787; font-family:"微软雅黑 Light", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s23 { color: #FF5A05; font-family:"微软雅黑 Light", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11.5pt; vertical-align: -1pt; }
 .s24 { color: #FF5A05; font-family:"微软雅黑 Light", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11.5pt; vertical-align: 1pt; }
 .s25 { color: #353535; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11.5pt; }
 .s26 { color: #878787; font-family:"微软雅黑 Light", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s27 { color: #878787; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11.5pt; }
 .s28 { color: #878787; font-family:"Microsoft Sans Serif", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; vertical-align: 1pt; }
 .s29 { color: #878787; font-family:"Microsoft Sans Serif", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s30 { color: #FF5A05; font-family:"微软雅黑 Light", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11.5pt; }
 .s31 { color: #FF5A05; font-family:"Microsoft Sans Serif", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11.5pt; }
 .s32 { color: #353535; font-family:"Segoe UI Emoji", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11.5pt; }
 li {display: block; }
 #l1 {padding-left: 0pt;counter-reset: c1 1; }
 #l1> li>*:first-child:before {counter-increment: c1; content: counter(c1, decimal)". "; color: #353535; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l1> li:first-child>*:first-child:before {counter-increment: c1 0;  }
 li {display: block; }
 #l2 {padding-left: 0pt;counter-reset: d1 1; }
 #l2> li>*:first-child:before {counter-increment: d1; content: counter(d1, decimal)". "; color: #353535; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 #l2> li:first-child>*:first-child:before {counter-increment: d1 0;  }
 table, tbody {vertical-align: top; overflow: visible; }
</style></head><body><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="7" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_001.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="7" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_002.png"/></span></p><p class="s1" style="padding-top: 2pt;padding-left: 22pt;text-indent: 0pt;text-align: left;"><span style=" color: #E47B39; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt;">讲堂 </span><a href="https://time.geekbang.org/column/139" style=" color: #CCC; font-family:&quot;Microsoft Sans Serif&quot;, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;" target="_blank"> </a><a href="https://time.geekbang.org/column/139" class="a" target="_blank">MySQL实战45</a><span style=" color: #E47B39; font-family:微软雅黑, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt;">讲 </span> <span class="s2">文章详情</span></p><p class="s3" style="padding-top: 2pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">01 | <span class="s4">基础架构：一条</span>SQL<span class="s4">查询语句是如何执行的？</span></p><p class="s5" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">2018-11-14 林晓斌</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: left;"><span><img width="673" height="377" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_003.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="674" height="84" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_004.png"/></span></p><p class="s6" style="padding-top: 13pt;padding-left: 52pt;text-indent: 0pt;line-height: 19pt;text-align: left;">01 | <span class="s7">基础架构：一条</span>SQL<span class="s7">查询语句是如何执行的？</span></p><p class="s8" style="padding-left: 52pt;text-indent: 0pt;line-height: 15pt;text-align: left;">朗读人：林晓斌 12′44′′ | 5.85M</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">你好，我是林晓斌。</p><p style="text-indent: 0pt;text-align: left;"><span><img width="674" height="54" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_005.png"/></span></p><p class="s9" style="text-indent: 0pt;line-height: 10pt;text-align: left;"> <span class="s10">复制代码</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="s11" style="text-indent: 0pt;line-height: 10pt;text-align: left;">1 <span style=" color: #23292D;">mysql&gt; select * from T where ID=10</span><span class="s13">；</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">这是专栏的第一篇文章，我想来跟你聊聊 MySQL 的基础架构。我们经常说，看一个事儿千万不要直接陷入细节里，你应该先鸟瞰其全貌，这样能够帮助你从高维度理解问题。同样，对于 MySQL 的学习也是这样。平时我们使用数据库，看到的通常都是一个整体。比如，你有个最简单的表，表里只有一个 ID 字段，在执行下面这个查询语句时：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">我们看到的只是输入一条语句，返回一个结果，却不知道这条语句在 MySQL 内部的执行过程。</p><p style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">所以今天我想和你一起把 MySQL 拆解一下，看看里面都有哪些“零件”，希望借由这个拆解过程，让你对 MySQL 有更深入的理解。这样当我们碰到 MySQL 的一些异常或者问题时，就能够直戳本质，更为快速地定位并解决问题。</p><p style="padding-top: 3pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">下面我给出的是 MySQL 的基本架构示意图，从中你可以清楚地看到 SQL 语句在 MySQL 的各个功能模块中的执行过程。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: left;"><span><img width="673" height="505" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_006.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 215pt;text-indent: 0pt;text-align: center;">MySQL 的逻辑架构图</p><p style="padding-left: 22pt;text-indent: 0pt;text-align: left;">大体来说，MySQL 可以分为 Server 层和存储引擎层两部分。</p><p style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Server 层包括连接器、查询缓存、分析器、优化器、执行器等，涵盖 MySQL 的大多数核心服务功能，以及所有的内置函数（如日期、时间、数学和加密函数等），所有跨存储引擎的功能都在这一层实现，比如存储过程、触发器、视图等。</p><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">而存储引擎层负责数据的存储和提取。其架构模式是插件式的，支持 InnoDB、MyISAM、 Memory 等多个存储引擎。现在最常用的存储引擎是 InnoDB，它从 MySQL 5.5.5 版本开始成为了默认存储引擎。</p><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">也就是说，你执行 create table 建表的时候，如果不指定引擎类型，默认使用的就是 InnoDB。不过，你也可以通过指定存储引擎的类型来选择别的引擎，比如在 create table 语句中使用 engine=memory, 来指定使用内存引擎创建表。不同存储引擎的表数据存取方式不同，支持的功能也不同，在后面的文章中，我们会讨论到引擎的选择。</p><p style="padding-top: 3pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">从图中不难看出，不同的存储引擎共用一个<span style=" color: #000;">Server 层</span>，也就是从连接器到执行器的部分。你可以先对每个组件的名字有个印象，接下来我会结合开头提到的那条 SQL 语句，带你走一遍整个执行流程，依次看下每个组件的作用。</p><p class="s15" style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">连接器</p><p style="text-indent: 0pt;text-align: left;"><span><img width="674" height="54" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_007.png"/></span></p><p class="s9" style="padding-top: 5pt;text-indent: 0pt;line-height: 10pt;text-align: right;"> <span class="s10">复制代码</span></p><p class="s11" style="padding-left: 18pt;text-indent: 0pt;line-height: 9pt;text-align: left;">1 <span style=" color: #23292D;">mysql -h$ip -P$port -u$user -p</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">第一步，你会先连接到这个数据库上，这时候接待你的就是连接器。连接器负责跟客户端建立连接、获取权限、维持和管理连接。连接命令一般是这么写的：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">输完命令之后，你就需要在交互对话里面输入密码。虽然密码也可以直接跟在 -p 后面写在命令行中，但这样可能会导致你的密码泄露。如果你连的是生产服务器，强烈建议你不要这么做。</p><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">连接命令中的 mysql 是客户端工具，用来跟服务端建立连接。在完成经典的 TCP 握手后，连接器就要开始认证你的身份，这个时候用的就是你输入的用户名和密码。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="6" height="6" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_008.png"/></span></p><p style="padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;">如果用户名或密码不对，你就会收到一个&quot;Access denied for user&quot;的错误，然后客户端程序结束执行。</p><p style="text-indent: 0pt;text-align: left;"><span><img width="6" height="6" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_009.png"/></span></p><p style="padding-left: 38pt;text-indent: 0pt;text-align: left;">如果用户名密码认证通过，连接器会到权限表里面查出你拥有的权限。之后，这个连接里面的权限判断逻辑，都将依赖于此时读到的权限。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">这就意味着，一个用户成功建立连接后，即使你用管理员账号对这个用户的权限做了修改，也不会影响已经存在连接的权限。修改完成后，只有再新建的连接才会使用新的权限设置。</p><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">连接完成后，如果你没有后续的动作，这个连接就处于空闲状态，你可以在 show processlist命令中看到它。文本中这个图是 show processlist 的结果，其中的 Command 列显示</p><p style="padding-left: 22pt;text-indent: 0pt;line-height: 21pt;text-align: left;">为“Sleep”的这一行，就表示现在系统里面有一个空闲连接。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: left;"><span><img width="674" height="125" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_010.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: left;">客户端如果太长时间没动静，连接器就会自动将它断开。这个时间是由参数 wait_timeout 控制的，默认值是 8 小时。</p><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">如果在连接被断开之后，客户端再次发送请求的话，就会收到一个错误提醒： Lost connection to MySQL server during query。这时候如果你要继续，就需要重连，然后再执行请求了。</p><p style="padding-top: 3pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">数据库里面，长连接是指连接成功后，如果客户端持续有请求，则一直使用同一个连接。短连接则是指每次执行完很少的几次查询就断开连接，下次查询再重新建立一个。</p><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">建立连接的过程通常是比较复杂的，所以我建议你在使用中要尽量减少建立连接的动作，也就是尽量使用长连接。</p><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">但是全部使用长连接后，你可能会发现，有些时候 MySQL 占用内存涨得特别快，这是因为 MySQL 在执行过程中临时使用的内存是管理在连接对象里面的。这些资源会在连接断开的时候才释放。所以如果长连接累积下来，可能导致内存占用太大，被系统强行杀掉（OOM），从现象看就是 MySQL 异常重启了。</p><p style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">怎么解决这个问题呢？你可以考虑以下两种方案。</p><ol id="l1"><li><p style="padding-top: 11pt;padding-left: 45pt;text-indent: -13pt;text-align: left;">定期断开长连接。使用一段时间，或者程序里面判断执行过一个占用内存的大查询后，断开连接，之后要查询再重连。</p></li><li><p style="padding-top: 12pt;padding-left: 45pt;text-indent: -13pt;text-align: justify;">如果你用的是 MySQL 5.7 或更新版本，可以在每次执行一个比较大的操作后，通过执行 mysql_reset_connection 来重新初始化连接资源。这个过程不需要重连和重新做权限验证，但是会将连接恢复到刚刚创建完时的状态。</p></li></ol><p class="s15" style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">查询缓存</p><p style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">连接建立完成后，你就可以执行 select 语句了。执行逻辑就会来到第二步：查询缓存。</p><p style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">MySQL 拿到一个查询请求后，会先到查询缓存看看，之前是不是执行过这条语句。之前执行过的语句及其结果可能会以 key-value 对的形式，被直接缓存在内存中。key 是查询的语句， value 是查询的结果。如果你的查询能够直接在这个缓存中找到 key，那么这个 value 就会被直接返回给客户端。</p><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">如果语句不在查询缓存中，就会继续后面的执行阶段。执行完成后，执行结果会被存入查询缓存中。你可以看到，如果查询命中缓存，MySQL 不需要执行后面的复杂操作，就可以直接返回结果，这个效率会很高。</p><p class="s14" style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">但是大多数情况下我会建议你不要使用查询缓存，为什么呢？因为查询缓存往往弊大于利。</p><p style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">查询缓存的失效非常频繁，只要有对一个表的更新，这个表上所有的查询缓存都会被清空。因此很可能你费劲地把结果存起来，还没使用呢，就被一个更新全清空了。对于更新压力大的数据库来说，查询缓存的命中率会非常低。除非你的业务就是有一张静态表，很长时间才会更新一次。比如，一个系统配置表，那这张表上的查询才适合使用查询缓存。</p><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">好在 MySQL 也提供了这种“按需使用”的方式。你可以将参数 query_cache_type 设置成 DEMAND，这样对于默认的 SQL 语句都不使用查询缓存。而对于你确定要使用查询缓存的语</p><p style="text-indent: 0pt;text-align: left;"><span><img width="674" height="54" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_011.png"/></span></p><p class="s9" style="text-indent: 0pt;line-height: 10pt;text-align: left;"> <span class="s10">复制代码</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="s11" style="text-indent: 0pt;line-height: 10pt;text-align: left;">1 <span style=" color: #23292D;">mysql&gt; select SQL_CACHE * from T where ID=10</span><span class="s13">；</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 3pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">句，可以用 SQL_CACHE 显式指定，像下面这个语句一样：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">需要注意的是，MySQL 8.0 版本直接将查询缓存的整块功能删掉了，也就是说 8.0 开始彻底没有这个功能了。</p><p class="s15" style="padding-top: 13pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">分析器</p><p style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">如果没有命中查询缓存，就要开始真正执行语句了。首先，MySQL 需要知道你要做什么，因此需要对 SQL 语句做解析。</p><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">分析器先会做“词法分析”。你输入的是由多个字符串和空格组成的一条 SQL 语句，MySQL需要识别出里面的字符串分别是什么，代表什么。</p><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">MySQL 从你输入的&quot;select&quot;这个关键字识别出来，这是一个查询语句。它也要把字符串“T”识别成“表名 T”，把字符串“ID”识别成“列 ID”。</p><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">做完了这些识别以后，就要做“语法分析”。根据词法分析的结果，语法分析器会根据语法规则，判断你输入的这个 SQL 语句是否满足 MySQL 语法。</p><p style="text-indent: 0pt;text-align: left;"><span><img width="674" height="111" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_012.png"/></span></p><p class="s9" style="padding-top: 5pt;text-indent: 0pt;line-height: 10pt;text-align: right;"> <span class="s10">复制代码</span></p><p class="s11" style="padding-left: 18pt;text-indent: 0pt;line-height: 9pt;text-align: left;">1 <span style=" color: #23292D;">mysql&gt; elect * from t where ID=1;</span></p><p class="s11" style="padding-top: 4pt;padding-left: 18pt;text-indent: 0pt;text-align: left;">2</p><p class="s11" style="padding-top: 4pt;padding-left: 18pt;text-indent: 0pt;text-align: left;">3 <span style=" color: #23292D;">ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">如果你的语句不对，就会收到“You have an error in your SQL syntax”的错误提醒，比如下面这个语句 select 少打了开头的字母“s”。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">一般语法错误会提示第一个出现错误的位置，所以你要关注的是紧接“use near”的内容。</p><p class="s15" style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">优化器</p><p style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">经过了分析器，MySQL 就知道你要做什么了。在开始执行之前，还要先经过优化器的处理。</p><p style="text-indent: 0pt;text-align: left;"><span><img width="674" height="54" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_013.png"/></span></p><p class="s9" style="padding-top: 5pt;text-indent: 0pt;line-height: 10pt;text-align: right;"> <span class="s10">复制代码</span></p><p class="s11" style="padding-left: 18pt;text-indent: 0pt;line-height: 9pt;text-align: left;">1 <span style=" color: #23292D;">mysql&gt; select * from t1 join t2 using(ID) where t1.c=10 and t2.d=20;</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">优化器是在表里面有多个索引的时候，决定使用哪个索引；或者在一个语句有多表关联（join）的时候，决定各个表的连接顺序。比如你执行下面这样的语句，这个语句是执行两个表的 join：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="6" height="6" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_014.png"/></span></p><p style="padding-top: 3pt;padding-left: 38pt;text-indent: 0pt;text-align: left;">既可以先从表 t1 里面取出 c=10 的记录的 ID 值，再根据 ID 值关联到表 t2，再判断 t2 里面 d 的值是否等于 20。</p><p style="text-indent: 0pt;text-align: left;"><span><img width="6" height="6" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_015.png"/></span></p><p style="padding-left: 38pt;text-indent: 0pt;text-align: left;">也可以先从表 t2 里面取出 c=20 的记录的 ID 值，再根据 ID 值关联到 t1，再判断 t1 里面 c的值是否等于 10。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 2pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">这两种执行方法的逻辑结果是一样的，但是执行的效率会有不同，而优化器的作用就是决定选择使用哪一个方案。</p><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">优化器阶段完成后，这个语句的执行方案就确定下来了，然后进入执行器阶段。如果你还有一些疑问，比如优化器是怎么选择索引的，有没有可能选择错等等，没关系，我会在后面的文章中单独展开说明优化器的内容。</p><p class="s15" style="padding-top: 13pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">执行器</p><p style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">MySQL 通过分析器知道了你要做什么，通过优化器知道了该怎么做，于是就进入了执行器阶段，开始执行语句。</p><p style="text-indent: 0pt;text-align: left;"><span><img width="674" height="94" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_016.png"/></span></p><p class="s9" style="padding-top: 5pt;text-indent: 0pt;line-height: 10pt;text-align: right;"> <span class="s10">复制代码</span></p><p class="s11" style="padding-left: 18pt;text-indent: 0pt;line-height: 9pt;text-align: left;">1 <span style=" color: #23292D;">mysql&gt; select * from T where ID=10;</span></p><p class="s11" style="padding-top: 4pt;padding-left: 18pt;text-indent: 0pt;text-align: left;">2</p><p class="s11" style="padding-top: 4pt;padding-left: 18pt;text-indent: 0pt;text-align: left;">3 <span style=" color: #23292D;">ERROR 1142 (42000): SELECT command denied to user &#39;b&#39;@&#39;localhost&#39; for table &#39;T&#39;</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">开始执行的时候，要先判断一下你对这个表 T 有没有执行查询的权限，如果没有，就会返回没有权限的错误，如下所示。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">如果有权限，就打开表继续执行。打开表的时候，优化器就会根据表的引擎定义，去使用这个引擎提供的接口。</p><p style="padding-top: 11pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">比如我们这个例子中的表 T 中，ID 字段没有索引，那么执行器的执行流程是这样的：</p><ol id="l2"><li><p style="padding-top: 11pt;padding-left: 45pt;text-indent: -13pt;text-align: left;">调用 InnoDB 引擎接口取这个表的第一行，判断 ID 值是不是 10，如果不是则跳过，如果是则将这行存在结果集中；</p></li><li><p style="padding-top: 11pt;padding-left: 45pt;text-indent: -13pt;text-align: left;">调用引擎接口取“下一行”，重复相同的判断逻辑，直到取到这个表的最后一行。</p></li><li><p style="padding-top: 10pt;padding-left: 22pt;text-indent: 9pt;line-height: 149%;text-align: left;">执行器将上述遍历过程中所有满足条件的行组成的记录集作为结果集返回给客户端。至此，这个语句就执行完成了。</p></li></ol><p style="padding-left: 22pt;text-indent: 0pt;text-align: left;">对于有索引的表，执行的逻辑也差不多。第一次调用的是“取满足条件的第一行”这个接口，之后循环取“满足条件的下一行”这个接口，这些接口都是引擎中已经定义好的。</p><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">你会在数据库的慢查询日志中看到一个 rows_examined 的字段，表示这个语句执行过程中扫描了多少行。这个值就是在执行器每次调用引擎获取数据行的时候累加的。</p><p style="padding-top: 3pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">在有些场景下，执行器调用一次，在引擎内部则扫描了多行，因此<span style=" color: #000;">引擎扫描行数跟 rows_examined 并不是完全相同的。</span>我们后面会专门有一篇文章来讲存储引擎的内部机制，里面会有详细的说明。</p><p class="s15" style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">小结</p><p style="padding-top: 1pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">今天我给你介绍了 MySQL 的逻辑架构，希望你对一个 SQL 语句完整执行流程的各个阶段有了一个初步的印象。由于篇幅的限制，我只是用一个查询的例子将各个环节过了一遍。如果你还对每个环节的展开细节存有疑问，也不用担心，后续在实战章节中我还会再提到它们。</p><p style="padding-top: 12pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">我给你留一个问题吧，如果表 T 中没有字段 k，而你执行了这个语句 select * from T where k=1, 那肯定是会报“不存在这个列”的错误： “Unknown column ‘k’ in ‘where clause’”。你觉得这个错误是在我们上面提到的哪个阶段报出来的呢？</p><p style="padding-left: 22pt;text-indent: 0pt;text-align: left;"><span><img width="674" height="333" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_017.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">©版权归极客邦科技所有，未经许可不得转载</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="674" height="1" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_018.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="62" height="22" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_019.png"/></span></p><p class="s17" style="padding-left: 7pt;text-indent: 0pt;line-height: 17pt;text-align: left;">上一篇</p><p style="text-indent: 0pt;text-align: left;"/><p class="s2" style="padding-left: 76pt;text-indent: 0pt;text-align: left;">开篇词 | 这一次，让我们一起来搞懂MySQL</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 6pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><span><img width="718" height="10" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_020.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="52" height="28" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_021.png"/></span></p><p class="s18" style="padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">写留言</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="674" height="1" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_022.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-left: 252pt;text-indent: 0pt;text-align: left;">精选留言</p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_023.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_024.png"/></span></p><p class="s19" style="padding-top: 10pt;padding-left: 60pt;text-indent: 0pt;line-height: 20pt;text-align: left;">Geek_75aada <span class="s20"></span><span class="s9"> </span><span class="s21">9</span></p><p class="s7" style="padding-left: 60pt;text-indent: 0pt;line-height: 20pt;text-align: left;">执行器 这个阶段才会打开表 才会知道表有哪些列</p><p class="s22" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">2018-11-14</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 26pt;text-indent: 0pt;line-height: 5pt;text-align: left;"><span><img width="30" height="7" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_025.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="35" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_026.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_027.png"/></span></p><p class="s19" style="padding-top: 1pt;padding-left: 60pt;text-indent: 0pt;line-height: 22pt;text-align: left;">tonghuan <span class="s20"></span><span class="s9"> </span><span class="s23">4</span></p><p class="s7" style="padding-left: 60pt;text-indent: 0pt;line-height: 20pt;text-align: left;">语法分析</p><p class="s22" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">2018-11-14</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_028.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_029.png"/></span></p><p class="s19" style="padding-left: 60pt;text-indent: 0pt;line-height: 21pt;text-align: left;">郭 <span class="s20"></span><span class="s9"> </span><span class="s24">2</span></p><p class="s7" style="padding-left: 60pt;text-indent: 0pt;line-height: 20pt;text-align: left;">有个问题不太明白，为什么对权限的检查不在优化器之前做？</p><p class="s22" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">2018-11-14</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_030.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_031.png"/></span></p><p class="s19" style="padding-left: 60pt;text-indent: 0pt;line-height: 21pt;text-align: left;">圈 圈 圆 圆 <span class="s20"> </span><span class="s24">1</span></p><p class="s7" style="padding-left: 60pt;text-indent: 0pt;line-height: 20pt;text-align: left;">《高性能mysql》里提到解析器和预处理器。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 60pt;text-indent: 0pt;text-align: left;">解析器处理语法和解析查询, 生成一课对应的解析树。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_032.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_033.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="45" height="45" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_034.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_035.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_036.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_037.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_038.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_039.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_040.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_041.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_042.png"/></span></p><p class="s7" style="padding-left: 60pt;text-indent: 0pt;line-height: 85%;text-align: left;">预处理器进一步检查解析树的合法。比如: 数据表和数据列是否存在, 别名是否有歧义等。如果通过则生成新的解析树，再提交给优化器。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:57.5251pt" cellspacing="0"><tr style="height:19pt"><td style="width:419pt"><p class="s25" style="padding-left: 2pt;text-indent: 0pt;line-height: 18pt;text-align: left;">所以我觉得课后习题的错误应该发生在在分析器处理阶段&gt;_&lt;</p></td><td style="width:53pt" rowspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:419pt"><p class="s26" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">2018-11-14</p></td></tr><tr style="height:48pt"><td style="width:419pt"><p class="s27" style="padding-top: 6pt;padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;">anit</p><p class="s25" style="padding-left: 2pt;text-indent: 0pt;line-height: 19pt;text-align: left;">应该是优化器的时候</p></td><td style="width:53pt"><p class="s28" style="padding-top: 6pt;padding-right: 2pt;text-indent: 0pt;text-align: right;"><span class="s29"> </span><span class="s30">1</span></p></td></tr><tr style="height:25pt"><td style="width:419pt"><p class="s26" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">2018-11-14</p></td><td style="width:53pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:48pt"><td style="width:419pt"><p class="s27" style="padding-top: 6pt;padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;">Geek_X</p><p class="s25" style="padding-left: 2pt;text-indent: 0pt;line-height: 19pt;text-align: left;">飞总说是分析器，我附议，哈哈</p></td><td style="width:53pt"><p class="s28" style="padding-top: 6pt;padding-right: 2pt;text-indent: 0pt;text-align: right;"><span class="s29"> </span><span class="s30">1</span></p></td></tr><tr style="height:25pt"><td style="width:419pt"><p class="s26" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">2018-11-14</p></td><td style="width:53pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:48pt"><td style="width:419pt"><p class="s27" style="padding-top: 6pt;padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;">啊油酱</p><p class="s25" style="padding-left: 2pt;text-indent: 0pt;line-height: 19pt;text-align: left;">迫不及待想看第一篇文章。 加班回来收拾下刚好到这个点。 希望自己加油。</p></td><td style="width:53pt"><p class="s28" style="padding-top: 6pt;padding-right: 2pt;text-indent: 0pt;text-align: right;"><span class="s29"> </span><span class="s30">1</span></p></td></tr><tr style="height:19pt"><td style="width:419pt"><p class="s26" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;line-height: 16pt;text-align: left;">2018-11-14</p></td><td style="width:53pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:21pt"><td style="width:419pt"><p class="s31" style="padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;"> <span><img width="3" height="16" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_043.png"/></span><span class="s27">作者回复</span></p></td><td style="width:53pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:20pt"><td style="width:419pt"><p class="s25" style="padding-left: 2pt;text-indent: 0pt;line-height: 19pt;text-align: left;">好辛苦，希望语音版会让你学起来轻松些<span class="s32">😁</span></p></td><td style="width:53pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:23pt"><td style="width:419pt"><p class="s26" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">2018-11-14</p></td><td style="width:53pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:47pt"><td style="width:419pt"><p class="s27" style="padding-top: 7pt;padding-left: 2pt;padding-right: 356pt;text-indent: 0pt;line-height: 88%;text-align: left;">每天晒白牙<span style=" color: #353535;">执行阶段</span></p></td><td style="width:53pt"><p class="s28" style="padding-top: 5pt;padding-right: 2pt;text-indent: 0pt;text-align: right;"><span class="s29"> </span><span class="s30">0</span></p></td></tr><tr style="height:25pt"><td style="width:419pt"><p class="s26" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">2018-11-14</p></td><td style="width:53pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:48pt"><td style="width:419pt"><p class="s27" style="padding-top: 6pt;padding-left: 2pt;text-indent: 0pt;line-height: 20pt;text-align: left;">delete is create</p><p class="s25" style="padding-left: 2pt;text-indent: 0pt;line-height: 19pt;text-align: left;">分析语句合法的问题应该是在分析器完成的吧</p></td><td style="width:53pt"><p class="s28" style="padding-top: 6pt;padding-right: 2pt;text-indent: 0pt;text-align: right;"><span class="s29"> </span><span class="s30">0</span></p></td></tr><tr style="height:25pt"><td style="width:419pt"><p class="s26" style="padding-top: 1pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">2018-11-14</p></td><td style="width:53pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:25pt"><td style="width:419pt"><p class="s27" style="padding-top: 6pt;padding-left: 2pt;text-indent: 0pt;line-height: 17pt;text-align: left;">flying_bird</p></td><td style="width:53pt"><p class="s28" style="padding-top: 6pt;padding-right: 2pt;text-indent: 0pt;line-height: 17pt;text-align: right;"><span class="s29"> </span><span class="s30">0</span></p></td></tr></table><p class="s7" style="padding-top: 4pt;padding-left: 60pt;text-indent: 0pt;line-height: 85%;text-align: left;">分析器告诉你做什么，优化器告诉你怎么做。查询错误的列很明显干不了，我觉得应该在做什么阶段发现，发现得越早成本越低。我认为答案是分析器</p><p class="s22" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">2018-11-14</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_044.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_045.png"/></span></p><p class="s19" style="padding-left: 60pt;text-indent: 0pt;line-height: 21pt;text-align: left;">yang <span class="s20"></span><span class="s9"> </span><span class="s24">0</span></p><p class="s7" style="padding-left: 60pt;text-indent: 0pt;line-height: 20pt;text-align: left;">执行器</p><p class="s22" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">2018-11-14</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_046.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_047.png"/></span></p><p class="s19" style="padding-left: 60pt;text-indent: 0pt;line-height: 21pt;text-align: justify;">刘 大 明 <span class="s20"> </span><span class="s24">0</span></p><p class="s7" style="padding-top: 1pt;padding-left: 60pt;text-indent: 0pt;line-height: 85%;text-align: justify;">我觉得应该是分析器。优化器是对sql语句优化出一个最好的方案，如果没有该表，也就不存在优化一说，所以应该是在分析器里面对sql做了分析之后，发现没有该表就直接抛异常提示了。</p><p class="s22" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">2018-11-14</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_048.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_049.png"/></span></p><p class="s19" style="padding-left: 60pt;text-indent: 0pt;line-height: 21pt;text-align: left;">Weixiao <span class="s20"></span><span class="s9"> </span><span class="s24">0</span></p><p class="s7" style="padding-top: 1pt;padding-left: 60pt;text-indent: 0pt;line-height: 85%;text-align: left;">应该是执行器吧，因为这句话是符合语法的，分析器分析不出啥来，只有真正打开表执行的时候才会发现没有这一列。</p><p class="s22" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">2018-11-14</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_050.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_051.png"/></span></p><p class="s19" style="padding-left: 60pt;text-indent: 0pt;line-height: 21pt;text-align: left;">杨 逸 林 <span class="s20"> </span><span class="s24">0</span></p><p class="s7" style="padding-top: 1pt;padding-left: 60pt;text-indent: 0pt;line-height: 85%;text-align: left;">innodb在存储数据的时候，会产生三种文件，一个用来存储表结构，一个是索引，一个是数据。我觉得的应该是执行器这一步的时候，查了表结构</p><p class="s22" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">2018-11-14</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_052.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_053.png"/></span></p><p class="s19" style="padding-left: 60pt;text-indent: 0pt;line-height: 21pt;text-align: left;">pyhhou <span class="s20"></span><span class="s9"> </span><span class="s24">0</span></p><p class="s7" style="padding-top: 1pt;padding-left: 60pt;text-indent: 0pt;line-height: 85%;text-align: left;">想请问一下老师，最后说的引擎扫描的行数和实际扫描的行数是不一样的，那引擎扫描的行数具体指的是什么？存储引擎只是负责存储和提取吗？那么不同的存储引擎大致有何区别 呢？自己只是写过一些简单的SQL语句，从来没有接触过数据库底层，描述不到位的地方还请老师指正，谢谢老师</p><p class="s22" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">2018-11-14</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_054.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_055.png"/></span></p><p class="s19" style="padding-left: 60pt;text-indent: 0pt;line-height: 21pt;text-align: left;">ditiki <span class="s20"></span><span class="s9"> </span><span class="s24">0</span></p><p class="s7" style="padding-left: 60pt;text-indent: 0pt;line-height: 20pt;text-align: left;">请问能否在专业名词旁边加上它们的英文名称，比如分析器，优化器等等。谢谢！</p><p class="s22" style="padding-top: 1pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">2018-11-14</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_056.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_057.png"/></span></p><p class="s19" style="padding-left: 60pt;text-indent: 0pt;line-height: 21pt;text-align: left;">oygza <span class="s20"></span><span class="s9"> </span><span class="s24">0</span></p><p class="s7" style="padding-top: 1pt;padding-left: 60pt;text-indent: 0pt;line-height: 85%;text-align: left;">我猜测应该在分析阶段，根据文章介绍分析器的作用是让mysql知道你要做什么，对语法的分析应该是第一部，语法词法分析完成后应该是解析这条sql到底要执行什么操作，插入还是更新还是建表还是查询，这时mysql应该已经知道你想操作那个表而这个表存不存在，从而才能匹配不同的优化器类</p><p class="s22" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">2018-11-14</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s19" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">丶 全 靠 演 技 丶 <span class="s20"> </span><span class="s24">0</span></p><p class="s7" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">我猜是执行器</p><p class="s22" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">2018-11-14</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_058.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_059.png"/></span></p><p class="s19" style="padding-left: 60pt;text-indent: 0pt;line-height: 21pt;text-align: left;">朱 月 俊 <span class="s20"> </span><span class="s24">0</span></p><p class="s7" style="padding-left: 60pt;text-indent: 0pt;line-height: 18pt;text-align: left;">在执行器判断吧。 分析如下:</p><p class="s7" style="padding-left: 60pt;text-indent: 0pt;line-height: 18pt;text-align: left;">连接器是负责连接以及加权限；</p><p class="s7" style="padding-left: 60pt;text-indent: 0pt;line-height: 18pt;text-align: left;">分析器是负责将完整的sql语句进行拆解；</p><p class="s7" style="padding-left: 60pt;text-indent: 0pt;line-height: 85%;text-align: left;">优化器是负责存在多个索引的时候到底选择哪一个索引，这里最多只有一个索引，优化器在这里没啥用；</p><p class="s7" style="padding-left: 60pt;text-indent: 0pt;line-height: 19pt;text-align: left;">执行器应该是使用接口时，查询出错，然后提示。</p><p class="s22" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">2018-11-14</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="42" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_060.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="12" alt="image" src="01  基础架构：一条SQL查询语句是如何执行的？/Image_061.png"/></span></p><p class="s19" style="padding-left: 60pt;text-indent: 0pt;line-height: 21pt;text-align: left;">坐 在 海 边 看 风 车 <span class="s20"> </span><span class="s24">0</span></p><p class="s7" style="padding-left: 60pt;text-indent: 0pt;line-height: 20pt;text-align: left;">在分析器阶段就会被发现不存在这个column，就会报错</p><p class="s22" style="padding-top: 2pt;padding-left: 60pt;text-indent: 0pt;text-align: left;">2018-11-14</p></body></html>
